/* 
 * YouLend Third Party Onboarding API
 *
 * Through this API you can can initiate the process of onboarding a borrower with YouLend
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mark.ufland@youlend.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = YL.Web.Api.ThirdParty.Onboarding.Client.Client.OpenAPIDateConverter;

namespace YL.Web.Api.ThirdParty.Onboarding.Client.Model
{
    /// <summary>
    /// Model for the organisation details for a loead
    /// </summary>
    [DataContract]
    public partial class OrganisationDetailsV3 :  IEquatable<OrganisationDetailsV3>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrganisationDetailsV3" /> class.
        /// </summary>
        /// <param name="leadId">Gets or sets the lead id.</param>
        /// <param name="companyName">Gets or sets the company name.</param>
        /// <param name="companyNumber">Gets or sets the company number.</param>
        /// <param name="vatNumber">Gets or sets the VAT number for the organisation.</param>
        /// <param name="formationDate">Gets or sets the formation date for the organisation.</param>
        /// <param name="companyType">Gets or sets the company type.</param>
        /// <param name="address">address.</param>
        /// <param name="country">Gets or sets the country ISO code for the organisation.</param>
        /// <param name="description">Gets or sets the description for the company.</param>
        /// <param name="keyContactName">Gets or sets the key merchant contact who will be setting up the loan.</param>
        /// <param name="website">Gets or sets the organisation website URL.</param>
        /// <param name="phoneNumber">Gets or sets the organisation phone number.</param>
        /// <param name="email">Gets or sets the organisation email address.</param>
        /// <param name="significantPersons">Gets or sets the list of significant persons.</param>
        /// <param name="industries">Gets or sets the list of industries in which the organisation conducts business.</param>
        /// <param name="confirmedCreditSearch">Gets or sets a value indicating whether the organisation consents to a credit search.</param>
        public OrganisationDetailsV3(Guid leadId = default(Guid), string companyName = default(string), string companyNumber = default(string), string vatNumber = default(string), DateTime formationDate = default(DateTime), string companyType = default(string), Address address = default(Address), string country = default(string), string description = default(string), string keyContactName = default(string), string website = default(string), string phoneNumber = default(string), string email = default(string), List<SignificantPersonV2> significantPersons = default(List<SignificantPersonV2>), List<Industry> industries = default(List<Industry>), bool confirmedCreditSearch = default(bool))
        {
            this.LeadId = leadId;
            this.CompanyName = companyName;
            this.CompanyNumber = companyNumber;
            this.VatNumber = vatNumber;
            this.FormationDate = formationDate;
            this.CompanyType = companyType;
            this.Address = address;
            this.Country = country;
            this.Description = description;
            this.KeyContactName = keyContactName;
            this.Website = website;
            this.PhoneNumber = phoneNumber;
            this.Email = email;
            this.SignificantPersons = significantPersons;
            this.Industries = industries;
            this.ConfirmedCreditSearch = confirmedCreditSearch;
        }
        
        /// <summary>
        /// Gets or sets the lead id
        /// </summary>
        /// <value>Gets or sets the lead id</value>
        [DataMember(Name="leadId", EmitDefaultValue=false)]
        public Guid LeadId { get; set; }

        /// <summary>
        /// Gets or sets the company name
        /// </summary>
        /// <value>Gets or sets the company name</value>
        [DataMember(Name="companyName", EmitDefaultValue=false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or sets the company number
        /// </summary>
        /// <value>Gets or sets the company number</value>
        [DataMember(Name="companyNumber", EmitDefaultValue=false)]
        public string CompanyNumber { get; set; }

        /// <summary>
        /// Gets or sets the VAT number for the organisation
        /// </summary>
        /// <value>Gets or sets the VAT number for the organisation</value>
        [DataMember(Name="vatNumber", EmitDefaultValue=false)]
        public string VatNumber { get; set; }

        /// <summary>
        /// Gets or sets the formation date for the organisation
        /// </summary>
        /// <value>Gets or sets the formation date for the organisation</value>
        [DataMember(Name="formationDate", EmitDefaultValue=false)]
        public DateTime FormationDate { get; set; }

        /// <summary>
        /// Gets or sets the company type
        /// </summary>
        /// <value>Gets or sets the company type</value>
        [DataMember(Name="companyType", EmitDefaultValue=false)]
        public string CompanyType { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public Address Address { get; set; }

        /// <summary>
        /// Gets or sets the country ISO code for the organisation
        /// </summary>
        /// <value>Gets or sets the country ISO code for the organisation</value>
        [DataMember(Name="country", EmitDefaultValue=false)]
        public string Country { get; set; }

        /// <summary>
        /// Gets or sets the description for the company
        /// </summary>
        /// <value>Gets or sets the description for the company</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the key merchant contact who will be setting up the loan
        /// </summary>
        /// <value>Gets or sets the key merchant contact who will be setting up the loan</value>
        [DataMember(Name="keyContactName", EmitDefaultValue=false)]
        public string KeyContactName { get; set; }

        /// <summary>
        /// Gets or sets the organisation website URL
        /// </summary>
        /// <value>Gets or sets the organisation website URL</value>
        [DataMember(Name="website", EmitDefaultValue=false)]
        public string Website { get; set; }

        /// <summary>
        /// Gets or sets the organisation phone number
        /// </summary>
        /// <value>Gets or sets the organisation phone number</value>
        [DataMember(Name="phoneNumber", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or sets the organisation email address
        /// </summary>
        /// <value>Gets or sets the organisation email address</value>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or sets the list of significant persons
        /// </summary>
        /// <value>Gets or sets the list of significant persons</value>
        [DataMember(Name="significantPersons", EmitDefaultValue=false)]
        public List<SignificantPersonV2> SignificantPersons { get; set; }

        /// <summary>
        /// Gets or sets the list of industries in which the organisation conducts business
        /// </summary>
        /// <value>Gets or sets the list of industries in which the organisation conducts business</value>
        [DataMember(Name="industries", EmitDefaultValue=false)]
        public List<Industry> Industries { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether the organisation consents to a credit search
        /// </summary>
        /// <value>Gets or sets a value indicating whether the organisation consents to a credit search</value>
        [DataMember(Name="confirmedCreditSearch", EmitDefaultValue=false)]
        public bool ConfirmedCreditSearch { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class OrganisationDetailsV3 {\n");
            sb.Append("  LeadId: ").Append(LeadId).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  CompanyNumber: ").Append(CompanyNumber).Append("\n");
            sb.Append("  VatNumber: ").Append(VatNumber).Append("\n");
            sb.Append("  FormationDate: ").Append(FormationDate).Append("\n");
            sb.Append("  CompanyType: ").Append(CompanyType).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  KeyContactName: ").Append(KeyContactName).Append("\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  SignificantPersons: ").Append(SignificantPersons).Append("\n");
            sb.Append("  Industries: ").Append(Industries).Append("\n");
            sb.Append("  ConfirmedCreditSearch: ").Append(ConfirmedCreditSearch).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrganisationDetailsV3);
        }

        /// <summary>
        /// Returns true if OrganisationDetailsV3 instances are equal
        /// </summary>
        /// <param name="input">Instance of OrganisationDetailsV3 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrganisationDetailsV3 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LeadId == input.LeadId ||
                    (this.LeadId != null &&
                    this.LeadId.Equals(input.LeadId))
                ) && 
                (
                    this.CompanyName == input.CompanyName ||
                    (this.CompanyName != null &&
                    this.CompanyName.Equals(input.CompanyName))
                ) && 
                (
                    this.CompanyNumber == input.CompanyNumber ||
                    (this.CompanyNumber != null &&
                    this.CompanyNumber.Equals(input.CompanyNumber))
                ) && 
                (
                    this.VatNumber == input.VatNumber ||
                    (this.VatNumber != null &&
                    this.VatNumber.Equals(input.VatNumber))
                ) && 
                (
                    this.FormationDate == input.FormationDate ||
                    (this.FormationDate != null &&
                    this.FormationDate.Equals(input.FormationDate))
                ) && 
                (
                    this.CompanyType == input.CompanyType ||
                    (this.CompanyType != null &&
                    this.CompanyType.Equals(input.CompanyType))
                ) && 
                (
                    this.Address == input.Address ||
                    (this.Address != null &&
                    this.Address.Equals(input.Address))
                ) && 
                (
                    this.Country == input.Country ||
                    (this.Country != null &&
                    this.Country.Equals(input.Country))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.KeyContactName == input.KeyContactName ||
                    (this.KeyContactName != null &&
                    this.KeyContactName.Equals(input.KeyContactName))
                ) && 
                (
                    this.Website == input.Website ||
                    (this.Website != null &&
                    this.Website.Equals(input.Website))
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.SignificantPersons == input.SignificantPersons ||
                    this.SignificantPersons != null &&
                    input.SignificantPersons != null &&
                    this.SignificantPersons.SequenceEqual(input.SignificantPersons)
                ) && 
                (
                    this.Industries == input.Industries ||
                    this.Industries != null &&
                    input.Industries != null &&
                    this.Industries.SequenceEqual(input.Industries)
                ) && 
                (
                    this.ConfirmedCreditSearch == input.ConfirmedCreditSearch ||
                    this.ConfirmedCreditSearch.Equals(input.ConfirmedCreditSearch)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LeadId != null)
                    hashCode = hashCode * 59 + this.LeadId.GetHashCode();
                if (this.CompanyName != null)
                    hashCode = hashCode * 59 + this.CompanyName.GetHashCode();
                if (this.CompanyNumber != null)
                    hashCode = hashCode * 59 + this.CompanyNumber.GetHashCode();
                if (this.VatNumber != null)
                    hashCode = hashCode * 59 + this.VatNumber.GetHashCode();
                if (this.FormationDate != null)
                    hashCode = hashCode * 59 + this.FormationDate.GetHashCode();
                if (this.CompanyType != null)
                    hashCode = hashCode * 59 + this.CompanyType.GetHashCode();
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.Country != null)
                    hashCode = hashCode * 59 + this.Country.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.KeyContactName != null)
                    hashCode = hashCode * 59 + this.KeyContactName.GetHashCode();
                if (this.Website != null)
                    hashCode = hashCode * 59 + this.Website.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.SignificantPersons != null)
                    hashCode = hashCode * 59 + this.SignificantPersons.GetHashCode();
                if (this.Industries != null)
                    hashCode = hashCode * 59 + this.Industries.GetHashCode();
                hashCode = hashCode * 59 + this.ConfirmedCreditSearch.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
