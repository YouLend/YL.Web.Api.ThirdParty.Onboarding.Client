/* 
 * YouLend Third Party Onboarding API
 *
 * Through this API you can can initiate the process of onboarding a borrower with YouLend
 *
 * The version of the OpenAPI document: 1.0
 * Contact: mark.ufland@youlend.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = YL.Web.Api.ThirdParty.Onboarding.Client.Client.OpenAPIDateConverter;

namespace YL.Web.Api.ThirdParty.Onboarding.Client.Model
{
    /// <summary>
    /// The result of creating a third party lead
    /// </summary>
    [DataContract]
    public partial class SaveSignificantPersonsResultModel :  IEquatable<SaveSignificantPersonsResultModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SaveSignificantPersonsResultModel" /> class.
        /// </summary>
        /// <param name="leadId">Gets or sets the Lead Id.</param>
        /// <param name="significantPersonIds">Gets or sets the Significant person ids.</param>
        public SaveSignificantPersonsResultModel(Guid leadId = default(Guid), List<Guid> significantPersonIds = default(List<Guid>))
        {
            this.LeadId = leadId;
            this.SignificantPersonIds = significantPersonIds;
        }
        
        /// <summary>
        /// Gets or sets the Lead Id
        /// </summary>
        /// <value>Gets or sets the Lead Id</value>
        [DataMember(Name="leadId", EmitDefaultValue=false)]
        public Guid LeadId { get; set; }

        /// <summary>
        /// Gets or sets the Significant person ids
        /// </summary>
        /// <value>Gets or sets the Significant person ids</value>
        [DataMember(Name="significantPersonIds", EmitDefaultValue=false)]
        public List<Guid> SignificantPersonIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SaveSignificantPersonsResultModel {\n");
            sb.Append("  LeadId: ").Append(LeadId).Append("\n");
            sb.Append("  SignificantPersonIds: ").Append(SignificantPersonIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SaveSignificantPersonsResultModel);
        }

        /// <summary>
        /// Returns true if SaveSignificantPersonsResultModel instances are equal
        /// </summary>
        /// <param name="input">Instance of SaveSignificantPersonsResultModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SaveSignificantPersonsResultModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LeadId == input.LeadId ||
                    (this.LeadId != null &&
                    this.LeadId.Equals(input.LeadId))
                ) && 
                (
                    this.SignificantPersonIds == input.SignificantPersonIds ||
                    this.SignificantPersonIds != null &&
                    input.SignificantPersonIds != null &&
                    this.SignificantPersonIds.SequenceEqual(input.SignificantPersonIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LeadId != null)
                    hashCode = hashCode * 59 + this.LeadId.GetHashCode();
                if (this.SignificantPersonIds != null)
                    hashCode = hashCode * 59 + this.SignificantPersonIds.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
